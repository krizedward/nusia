<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use App\User;
use App\Models\Session;
use App\Models\SessionRegistration;

use Str;
use Illuminate\Support\Facades\Validator;
use Illuminate\Validation\Rule;
use Illuminate\Support\Facades\Auth;
use Carbon\Carbon;
use Illuminate\Support\Facades\File;

class AttendanceController extends Controller
{
    /**
     * Memeriksa role User saat ini.
     * Return user.roles atau null.
     */
    public function user_roles() {
        return (Auth::check())? Auth::user()->roles : null;
    }

    /**
     * Memeriksa jenis role User saat ini.
     * 1: True (jenis role sesuai)
     * 0: False (jenis role tidak sesuai)
     */
    public function is_admin() {
        return ($this->user_roles() == "Admin")? 1 : 0;
    }
    public function is_financial_team() {
        return ($this->user_roles() == "Financial Team")? 1 : 0;
    }
    public function is_customer_service() {
        return ($this->user_roles() == "Customer Service")? 1 : 0;
    }
    public function is_lead_instructor() {
        return ($this->user_roles() == "Lead Instructor")? 1 : 0;
    }
    public function is_instructor() {
        return ($this->user_roles() == "Instructor")? 1 : 0;
    }
    public function is_student() {
        return ($this->user_roles() == "Student")? 1 : 0;
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        //
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        //
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        //
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($session_id)
    {
        if($this->is_admin()) {
            $session_registrations = SessionRegistration::where('session_id', $session_id)->get();
            $session = Session::findOrFail($session_id);

            return view('attendances.admin_edit', compact('session_registrations', 'session'));
        } else if($this->is_instructor()) {
            $session_registrations = SessionRegistration::where('session_id', $session_id)->get();
            if($session_registrations->count() == 0) {
                return redirect()->route('session_registrations.index');
            }
            
            $session = Session::findOrFail($session_id);
            $schedule_time = Carbon::parse($session->schedule->schedule_time);
            if(now() <= $schedule_time->add(80, 'minutes')) {
                // tidak diperbolehkan mengakses link.
                return redirect()->back();
            }

            return view('attendances.instructor_edit', compact('session_registrations', 'session'));
        } else {
            return redirect()->back();
        }
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $session_id)
    {
        if($this->is_admin() || $this->is_instructor()) {
            foreach(Session::findOrFail($session_id)->session_registrations as $sr) {
                $flag = 0;
                foreach($request->all() as $key => $val) {
                    if($key == 'flag'.$sr->course_registration->student->id && $val == 'true') {
                        $sr->update([
                            'status' => 'Should Submit Form',
                        ]);
                        $flag = 1;
                        break;
                    }
                }
                if($flag == 0) {
                    $sr->update([
                        'status' => 'Not Present',
                    ]);
                }
            }
        } else {
            // Tidak memiliki hak akses.
            return redirect()->back();
        }

        return redirect()->route('attendances.edit', $session_id);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        //
    }
}
